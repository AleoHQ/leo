---
namespace: Parse
expectation: Pass
outputs:
  - name: ""
    expected_input: []
    import_statements: []
    imports: {}
    aliases: {}
    circuits: {}
    global_consts: {}
    functions:
      "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":11,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function a() {\\\"}\"}":
        annotations:
          test:
            span:
              line_start: 3
              line_stop: 3
              col_start: 1
              col_stop: 6
              path: ""
              content: "@test"
            name: "{\"name\":\"test\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":2,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"@test\\\"}\"}"
            arguments: []
        identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":11,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function a() {\\\"}\"}"
        input: []
        const_: false
        output: ~
        core_mapping: ~
        block:
          statements:
            - Return:
                expression:
                  TupleInit:
                    elements: []
                    span:
                      line_start: 5
                      line_stop: 5
                      col_start: 12
                      col_stop: 14
                      path: ""
                      content: "    return ();"
                span:
                  line_start: 5
                  line_stop: 5
                  col_start: 5
                  col_stop: 14
                  path: ""
                  content: "    return ();"
          span:
            line_start: 4
            line_stop: 6
            col_start: 14
            col_stop: 2
            path: ""
            content: "function a() {\n     ...\n}"
        span:
          line_start: 4
          line_stop: 6
          col_start: 1
          col_stop: 2
          path: ""
          content: "function a() {\n     ...\n}"
      "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":10,\\\"col_stop\\\":11,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function b() {\\\"}\"}":
        annotations:
          test:
            span:
              line_start: 8
              line_stop: 8
              col_start: 1
              col_stop: 12
              path: ""
              content: "@test(test)"
            name: "{\"name\":\"test\",\"span\":\"{\\\"line_start\\\":8,\\\"line_stop\\\":8,\\\"col_start\\\":2,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"@test(test)\\\"}\"}"
            arguments:
              - test
        identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":10,\\\"col_stop\\\":11,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function b() {\\\"}\"}"
        input: []
        const_: false
        output: ~
        core_mapping: ~
        block:
          statements:
            - Return:
                expression:
                  TupleInit:
                    elements: []
                    span:
                      line_start: 10
                      line_stop: 10
                      col_start: 12
                      col_stop: 14
                      path: ""
                      content: "    return ();"
                span:
                  line_start: 10
                  line_stop: 10
                  col_start: 5
                  col_stop: 14
                  path: ""
                  content: "    return ();"
          span:
            line_start: 9
            line_stop: 11
            col_start: 14
            col_stop: 2
            path: ""
            content: "function b() {\n     ...\n}"
        span:
          line_start: 9
          line_stop: 11
          col_start: 1
          col_stop: 2
          path: ""
          content: "function b() {\n     ...\n}"
      "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":14,\\\"line_stop\\\":14,\\\"col_start\\\":10,\\\"col_stop\\\":11,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function c() {\\\"}\"}":
        annotations:
          test:
            span:
              line_start: 13
              line_stop: 13
              col_start: 1
              col_stop: 13
              path: ""
              content: "@test(test,)"
            name: "{\"name\":\"test\",\"span\":\"{\\\"line_start\\\":13,\\\"line_stop\\\":13,\\\"col_start\\\":2,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"@test(test,)\\\"}\"}"
            arguments:
              - test
        identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":14,\\\"line_stop\\\":14,\\\"col_start\\\":10,\\\"col_stop\\\":11,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function c() {\\\"}\"}"
        input: []
        const_: false
        output: ~
        core_mapping: ~
        block:
          statements:
            - Return:
                expression:
                  TupleInit:
                    elements: []
                    span:
                      line_start: 15
                      line_stop: 15
                      col_start: 12
                      col_stop: 14
                      path: ""
                      content: "    return ();"
                span:
                  line_start: 15
                  line_stop: 15
                  col_start: 5
                  col_stop: 14
                  path: ""
                  content: "    return ();"
          span:
            line_start: 14
            line_stop: 16
            col_start: 14
            col_stop: 2
            path: ""
            content: "function c() {\n     ...\n}"
        span:
          line_start: 14
          line_stop: 16
          col_start: 1
          col_stop: 2
          path: ""
          content: "function c() {\n     ...\n}"
      "{\"name\":\"d\",\"span\":\"{\\\"line_start\\\":19,\\\"line_stop\\\":19,\\\"col_start\\\":10,\\\"col_stop\\\":11,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function d() {\\\"}\"}":
        annotations:
          test:
            span:
              line_start: 18
              line_stop: 18
              col_start: 1
              col_stop: 8
              path: ""
              content: "@test()"
            name: "{\"name\":\"test\",\"span\":\"{\\\"line_start\\\":18,\\\"line_stop\\\":18,\\\"col_start\\\":2,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"@test()\\\"}\"}"
            arguments: []
        identifier: "{\"name\":\"d\",\"span\":\"{\\\"line_start\\\":19,\\\"line_stop\\\":19,\\\"col_start\\\":10,\\\"col_stop\\\":11,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function d() {\\\"}\"}"
        input: []
        const_: false
        output: ~
        core_mapping: ~
        block:
          statements:
            - Return:
                expression:
                  TupleInit:
                    elements: []
                    span:
                      line_start: 20
                      line_stop: 20
                      col_start: 12
                      col_stop: 14
                      path: ""
                      content: "    return ();"
                span:
                  line_start: 20
                  line_stop: 20
                  col_start: 5
                  col_stop: 14
                  path: ""
                  content: "    return ();"
          span:
            line_start: 19
            line_stop: 21
            col_start: 14
            col_stop: 2
            path: ""
            content: "function d() {\n     ...\n}"
        span:
          line_start: 19
          line_stop: 21
          col_start: 1
          col_stop: 2
          path: ""
          content: "function d() {\n     ...\n}"
