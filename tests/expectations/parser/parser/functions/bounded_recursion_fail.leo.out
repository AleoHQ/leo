---
namespace: Parse
expectation: Pass
outputs:
  - name: ""
    expected_input: []
    import_statements: []
    imports: {}
    aliases: {}
    circuits: {}
    global_consts: {}
    functions:
      "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":11,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function x(const y: u32) {\\\"}\"}":
        annotations: {}
        identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":11,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function x(const y: u32) {\\\"}\"}"
        input:
          - Variable:
              identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":18,\\\"col_stop\\\":19,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function x(const y: u32) {\\\"}\"}"
              const_: true
              mutable: false
              type_:
                IntegerType: U32
              span:
                line_start: 3
                line_stop: 3
                col_start: 18
                col_stop: 19
                path: ""
                content: "function x(const y: u32) {"
        const_: false
        output: ~
        core_mapping: ~
        block:
          statements:
            - Conditional:
                condition:
                  Binary:
                    left:
                      Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"    if y < 999u32 {\\\"}\"}"
                    right:
                      Value:
                        Integer:
                          - U32
                          - "999"
                          - span:
                              line_start: 4
                              line_stop: 4
                              col_start: 12
                              col_stop: 18
                              path: ""
                              content: "    if y < 999u32 {"
                    op: Lt
                    span:
                      line_start: 4
                      line_stop: 4
                      col_start: 8
                      col_stop: 18
                      path: ""
                      content: "    if y < 999u32 {"
                block:
                  statements:
                    - Expression:
                        expression:
                          Call:
                            function:
                              Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"        x(y+1);\\\"}\"}"
                            arguments:
                              - Binary:
                                  left:
                                    Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"        x(y+1);\\\"}\"}"
                                  right:
                                    Value:
                                      Implicit:
                                        - "1"
                                        - span:
                                            line_start: 5
                                            line_stop: 5
                                            col_start: 13
                                            col_stop: 14
                                            path: ""
                                            content: "        x(y+1);"
                                  op: Add
                                  span:
                                    line_start: 5
                                    line_stop: 5
                                    col_start: 11
                                    col_stop: 14
                                    path: ""
                                    content: "        x(y+1);"
                            span:
                              line_start: 5
                              line_stop: 5
                              col_start: 9
                              col_stop: 15
                              path: ""
                              content: "        x(y+1);"
                        span:
                          line_start: 5
                          line_stop: 5
                          col_start: 9
                          col_stop: 15
                          path: ""
                          content: "        x(y+1);"
                  span:
                    line_start: 4
                    line_stop: 6
                    col_start: 19
                    col_stop: 6
                    path: ""
                    content: "    if y < 999u32 {\n         ...\n    }"
                next: ~
                span:
                  line_start: 4
                  line_stop: 6
                  col_start: 5
                  col_stop: 6
                  path: ""
                  content: "    if y < 999u32 {\n         ...\n    }"
          span:
            line_start: 3
            line_stop: 7
            col_start: 26
            col_stop: 2
            path: ""
            content: "function x(const y: u32) {\n     ...\n     ...\n     ...\n}"
        span:
          line_start: 3
          line_stop: 7
          col_start: 1
          col_stop: 2
          path: ""
          content: "function x(const y: u32) {\n     ...\n     ...\n     ...\n}"
      "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}":
        annotations: {}
        identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}"
        input:
          - Variable:
              identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}"
              const_: false
              mutable: true
              type_: Boolean
              span:
                line_start: 9
                line_stop: 9
                col_start: 15
                col_stop: 16
                path: ""
                content: "function main(y: bool) -> bool {"
        const_: false
        output: Boolean
        core_mapping: ~
        block:
          statements:
            - Expression:
                expression:
                  Call:
                    function:
                      Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":10,\\\"line_stop\\\":10,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"    x(1u32);\\\"}\"}"
                    arguments:
                      - Value:
                          Integer:
                            - U32
                            - "1"
                            - span:
                                line_start: 10
                                line_stop: 10
                                col_start: 7
                                col_stop: 11
                                path: ""
                                content: "    x(1u32);"
                    span:
                      line_start: 10
                      line_stop: 10
                      col_start: 5
                      col_stop: 12
                      path: ""
                      content: "    x(1u32);"
                span:
                  line_start: 10
                  line_stop: 10
                  col_start: 5
                  col_stop: 12
                  path: ""
                  content: "    x(1u32);"
            - Return:
                expression:
                  Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":11,\\\"line_stop\\\":11,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"    return y;\\\"}\"}"
                span:
                  line_start: 11
                  line_stop: 11
                  col_start: 5
                  col_stop: 13
                  path: ""
                  content: "    return y;"
          span:
            line_start: 9
            line_stop: 12
            col_start: 32
            col_stop: 2
            path: ""
            content: "function main(y: bool) -> bool {\n     ...\n     ...\n}"
        span:
          line_start: 9
          line_stop: 12
          col_start: 1
          col_stop: 2
          path: ""
          content: "function main(y: bool) -> bool {\n     ...\n     ...\n}"
